本文主要介绍了7种不同类型的MySQL索引类型。在MySQL数据库表中，对字段进行建立索引是可以大幅度的提高其实际查询速度。通过对这些索引的巧妙的运用，我们可以令MySQL的查询和运行更加高效。

索引是快速搜索的关键。MySQL索引的建立对于MySQL的高效运行是很重要的。

下面介绍几种常见的MySQL索引类型：

在数据库表中，对字段建立索引可以大大提高查询速度。假如我们创建了一个 mytable表：

CREATE TABLE mytable( ID INT NOT NULL, username VARCHAR(16) NOT NULL ); 
我们随机向里面插入了10000条记录，其中有一条：5555, admin。

在查找username="admin"的记录

SELECT * FROM mytable WHERE username='admin'; 
时，如果在username上已经建立了索引，MySQL无须任何扫描，即准确可找到该记录。相反，MySQL会扫描所有记录，即要查询10000条记录。

索引分单列索引和组合索引。单列索引，即一个索引只包含单个列，一个表可以有多个单列索引，但这不是组合索引。组合索引，即一个索包含多个列。

MySQL索引类型包括：

(1)普通索引

这是最基本的索引，它没有任何限制。它有以下几种创建方式：

创建索引

CREATE INDEX indexName ON mytable(username(length)); 
如果是CHAR，VARCHAR类型，length可以小于字段实际长度;如果是BLOB和TEXT类型，必须指定 length，下同。

修改表结构

ALTER mytable ADD INDEX [indexName] ON (username(length)) 
创建表的时候直接指定

CREATE TABLE mytable( ID INT NOT NULL, 
username VARCHAR(16) NOT NULL, INDEX [indexName] (username(length)) ); 
删除索引的语法：

DROP INDEX [indexName] ON mytable; 
(2)MySQL索引类型：唯一索引

它与前面的普通索引类似，不同的就是：索引列的值必须唯一，但允许有空值。如果是组合索引，则列值的组合必须唯一。它有以下几种创建方式：

创建索引

CREATE UNIQUE INDEX indexName ON mytable(username(length)) 
修改表结构

ALTER mytable ADD UNIQUE [indexName] ON (username(length)) 
创建表的时候直接指定

CREATE TABLE mytable( ID INT NOT NULL, 
username VARCHAR(16) NOT NULL, UNIQUE [indexName] (username(length)) ); 
(3)MySQL索引类型：主键索引

它是一种特殊的唯一索引，不允许有空值。一般是在建表的时候同时创建主键索引：

CREATE TABLE mytable( ID INT NOT NULL, username VARCHAR(16) NOT NULL, PRIMARY KEY(ID) ); 
当然也可以用 ALTER 命令。记住：一个表只能有一个主键。

(4)组合索引

为了形象地对比单列索引和组合索引，为表添加多个字段：

CREATE TABLE mytable( ID INT NOT NULL, username 
VARCHAR(16) NOT NULL, city VARCHAR(50) NOT NULL, age INT NOT NULL ); 
为了进一步榨取MySQL的效率，就要考虑建立组合索引。就是将 name, city, age建到一个索引里：

ALTER TABLE mytable ADD INDEX name_city_age (name(10),city,age); 
建表时，usernname长度为 16，这里用 10。这是因为一般情况下名字的长度不会超过10，这样会加速索引查询速度，还会减少索引文件的大小，提高INSERT的更新速度。

如果分别在 usernname，city，age上建立单列索引，让该表有3个单列索引，查询时和上述的组合索引效率也会大不一样，远远低于我们的组合索引。虽然此时有了三个索引，但MySQL只能用到其中的那个它认为似乎是最有效率的单列索引。

建立这样的组合索引，其实是相当于分别建立了下面三组组合索引：

usernname,city,age usernname,city usernname 
以上的相关内容就是对MySQL索引类型的部分内容的介绍，望你能有所收获。
