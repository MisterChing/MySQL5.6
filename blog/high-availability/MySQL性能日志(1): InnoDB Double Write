前言
这段时间在使用MySQL时遇到问题，google的时候经常会进到MySQL Performance Blog这个网站，细看后发现这是用MySQL的几个开发人员主持的一个Blog，有很多关于MySQL使用和性能方面的短文。决心仔细读一读，并在空闲时将其翻译成中文。（试试看自己的翻译水平如何啦，要是好的话将来要是失业了还可以翻译翻译赚点钱啊）

原著：Peter Zaitsev
日期：2006-08-04
原文：http://www.mysqlperformanceblog.com/2006/08/04/innodb-double-write/#more-72

doublewrite是Innodb使用的有趣的技术之一，这一技术指的是当Innodb在进行表空间数据写操作时会将数据写两次（写日志时只写一次）。

为什么要用doublewrite？
目的是为了保证出现部分写失效（partial page write）--即数据页写到一半时就出现故障--时的数据安全性。Innodb并不在日志中记录整个数据页，而是使用一种称之为“生理”日志的技术，即日志项中只包含页号、对数据进行的操作（如更新一行记录）和日志序列号等信息。这一日志结构的优点是能够减少写入到日志的数据量，但这也要求要保持页内部的一致性。页的版本号是没关系的，数据页可以是当前版本（这时Innodb（故障恢复时）会跳过对页的更新操作）若是早期版本（这时Innodb将执行更新操作）。但如果页内部数据不一致，恢复将不能进行。

部分写失效
什么是部分写失效，为什么会出现这一现象呢？部分写失效指的是提交给操作系统的写数据页操作只完成了一部分。例如一个16K的Innodb数据页中只有4K被更新了，其余部分数据还是旧的。大部分的部分写失效都在断电时产生，在操作系统崩溃时也可能出现，这是由于操作系统可能将一个写16K数据的操作分割成多个写操作（这可能由文件碎片导致），而在执行这多个写操作的过程中发出的故障。当使用软件RAID技术时，数据页可能恰好跨越分片（stripe）的边界，这时也需要执行多个IO操作，因此也可能导致部分写失效。当使用硬件RAID又没有使用带电池的缓存时，断电时出现部分写失效也是可能的。当发送到磁盘本身只有一个写操作时，理论上硬件可以保证写操作即使在断电时也可以完成，因为驱动器内部应该积累有足够的电量来完成这一操作。但实话说我并不知道事实是不是这样，这很难检测，而且这也不是部分写失效的唯一原因。我所知道的只是部分写失效可能会出现，当Innodb实现 doublewrite功能前，我遇到过很多由于这一原因而导致数据被破坏。

doublewrite如何工作？
你可以将doublewrite看作是在Innodb表空间内部分配的一个短期的日志文件，这一日志文件包含100个数据页。Innodb在写出缓冲区中的数据页时采用的是一次写多个页的方式，这样多个页就可以先顺序写入到doublewrite缓冲区并调用fsync()保证这些数据被写出到磁盘，然后数据页才被定出到它们实际的存储位置并再次调用fsync()。故障恢复时Innodb检查doublewrite缓冲区与数据页原存储位置的内容，若数据页在doublewrite缓冲区中处于不一致状态将被简单的丢弃，若在原存储位置中不一致则从doublewrite缓冲区中还原。

doublewrite缓冲区对MySQL有何影响？
虽然doublewrite要求每个数据页都要被写二次，其性能开销远远小于二倍。写出到doublewrite缓冲区时是顺序写，因此开销很小。 doublewrite同时还可以降低Innodb执行的fsync()操作，即不需要写每个页时都调用一下fsync()，而可以提交多个写操作最后再调用一次fsync()操作，这使得操作系统可以优化写操作的执行顺序及并行使用多个存储设备。但在不使用doublewrite技术时也可以用这些优化，事实上这些优化是与doublewrite同时实现的。因此总体来说，我预计使用doublewrite技术带来的性能开销不会超过5%到10%。

能否禁用doublewrite？
如果你不关心数据一致性（比如使用了RAID0）或文件系统可以保证不会出现部分写失效，你可以通过将innodb_doublewrite参数设置为0还禁用doublewrite。但通常这可能带来更大的麻烦。
